name: docs sync PR on Solidity releases

on:
  schedule:
    # Runs "at minute 44 past midnight" (see https://crontab.guru)
    # Reason is avoiding full hour peak
    - cron: "44 0 * * *"

env:
  BOT_USERNAME: soldocsbot
  BOT_EMAIL: solidity-docs-translations@ethereum.org
  GITHUB_REPOSITORY_OWNER: solidity-docs

jobs:
  checkSolidityRelease:
    runs-on: ubuntu-latest
    outputs:
      current_release: ${{ steps.current-release-version.outputs.current_release }}
      latest_release: ${{ steps.latest-release-version.outputs.latest_release }}
    steps:
      - uses: actions/checkout@v4
      - name: Get current Solidity docs version
        id: current-release-version
        run: |
          current_release=$(<latest_solidity.release)
          echo "current_release=$current_release" >> $GITHUB_OUTPUT
      - name: Get latest Solidity release version
        id: latest-release-version
        run: |
          latest_release=$(
            curl -sL https://api.github.com/repos/ethereum/solidity/releases/latest | jq --raw-output ".tag_name" | cut -d"v" -f2
          )
          echo "latest_release=$latest_release" >> $GITHUB_OUTPUT

  createPullRequest:
    runs-on: ubuntu-latest
    needs: checkSolidityRelease
    if: needs.checkSolidityRelease.outputs.current_release != needs.checkSolidityRelease.outputs.latest_release
    strategy:
      # In the context matrix strategy, fail-fast means, if one of the jobs
      # fails,the rest of the jobs will be canceled. In our case, this can
      # be a limitation. When merging or creating PR to one repository fails,
      # the rest still can be good.
      fail-fast: false
      matrix:
        # This means, that all pull requests will be processed simultaneously
        # and independently of each other.
        repos:
          - bn-bengali
          - de-german
          - es-spanish
          - fa-persian
          - fr-french
          - he-hebrew
          - id-indonesian
          - ja-japanese
          - ko-korean
          - pt-portuguese
          - ru-russian
          - tr-turkish
          - ur-urdu
          - zh-chinese
    steps:
      - name: Fetch translation repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ env.GITHUB_REPOSITORY_OWNER }}/${{ matrix.repos }}
          # By default, checkout is fetching only the last commit. This will
          # cause "unrelated histories" error. "0" means unlimited fetch-depth.
          fetch-depth: 0
          # This is the working copy we'll prepare the sync PR in.
          path: translation/

      - name: Configure translation repository
        run: |
          cd translation/
          git config user.name "$BOT_USERNAME"
          git config user.email "$BOT_EMAIL"
          git remote add english "https://github.com/ethereum/solidity.git"
          git fetch english develop

      - name: Fetch main Solidity repository
        uses: actions/checkout@v4
        with:
          repository: ethereum/solidity
          fetch-depth: 0
          # This is the checkout where we can safely fetch the tags from the main Soldity repo and use git describe.
          # Translation repositories have their own version tags that conflict with the ones in the main repo.
          path: solidity/

      - name: Fetch bot's repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.repository }}
          path: bot/

      - name: Load bot configuration from translation-bot.json in the translation repository
        id: bot-config
        run: |
          bot/scripts/load-translation-bot-config.sh translation/translation-bot.json

      - name: Prepare pull request title and description
        if: ${{ steps.bot-config.outputs.bot_disabled == 'false' }}
        run: |
          # Use the main repository checkout with tags to get them in `git describe` output.
          cd solidity/
          ../bot/scripts/generate-pr-body.sh

      - name: Check if sync branch already exists
        id: check-sync-branch
        if: ${{ steps.bot-config.outputs.bot_disabled == 'false' }}
        run: |
          pushd solidity/
          sync_branch="sync-$(git describe --tags --always develop)"
          echo "branch_name=$sync_branch" >> "$GITHUB_OUTPUT"
          popd

          cd translation/
          ../bot/scripts/check-remote-branch.sh "$sync_branch"

      - name: Prepare pull request content
        if: ${{ steps.bot-config.outputs.bot_disabled == 'false' && steps.check-sync-branch.outputs.branch_exists == 'false' }}
        run: |
          cd translation/

          # NOTE: The script will end up not creating a merge commit if there are no new upstream changes.
          # In that case we expect that the PR action will simply not create a PR.
          ../bot/scripts/pull-and-resolve-english-changes.sh english/develop "$pr_title"

          if [[ ${{ steps.bot-config.outputs.randomly_assign_maintainers }} == 'true' ]]; then
            ../bot/scripts/set-assignees.sh "${{ matrix.repos }}"
          fi

      - name: Remove this repository
        if: ${{ steps.bot-config.outputs.bot_disabled == 'false' && steps.check-sync-branch.outputs.branch_exists == 'false' }}
        run: |
          rm -rf bot/

      - name: Create Sync Pull Request
        if: ${{ steps.bot-config.outputs.bot_disabled == 'false' && steps.check-sync-branch.outputs.branch_exists == 'false' }}
        uses: peter-evans/create-pull-request@v6
        with:
          path: translation/
          token: "${{ secrets.PAT }}"
          commit-message: "${{ env.pr_title }}"
          committer: "${{ env.BOT_USERNAME }} <${{ env.BOT_EMAIL }}>"
          author: "${{ env.BOT_USERNAME }} <${{ env.BOT_EMAIL }}>"
          branch: "${{ steps.check-sync-branch.outputs.branch_name }}"
          title: "${{ env.pr_title }}"
          body: "${{ env.pr_body }}"
          labels: "${{ join(fromJSON(steps.bot-config.outputs.pr_labels)) }}"
          assignees: ${{ env.assignee }}
          reviewers: ${{ env.reviewer }}

      - name: Fetch Solidity translation repository
        uses: actions/checkout@v4

      - name: Update Solidity version
        run: |
          echo ${{ needs.checkSolidityRelease.outputs.latest_release }} > latest_solidity.release

      - name: Create Pull Request to update Solidity version
        uses: peter-evans/create-pull-request@v6
        with:
          token: "${{ secrets.PAT }}"
          add-paths: latest_solidity.release
          commit-message: Update Solidity release version to ${{ needs.checkSolidityRelease.outputs.latest_release }}
          committer: "${{ env.BOT_USERNAME }} <${{ env.BOT_EMAIL }}>"
          author: "${{ env.BOT_USERNAME }} <${{ env.BOT_EMAIL }}>"
          title: Update Solidity release version to ${{ needs.checkSolidityRelease.outputs.latest_release }}
          body: |
            This PR updates the latest Solidity release version to ${{ needs.checkSolidityRelease.outputs.latest_release }}

            Auto-generated by ${{ env.BOT_USERNAME }}
          branch: solidity-release-updates
